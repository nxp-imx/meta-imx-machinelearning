diff --git a/WORKSPACE b/WORKSPACE
index 1796182..bb9530c 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -22,6 +22,12 @@ check_bazel_version_at_least("0.15.0")
 
 load("//tensorflow:workspace.bzl", "tf_workspace")
 
+new_local_repository(
+    name = "yocto",
+    path = "%%CT_ROOT_DIR%%",
+    build_file = "yocto.BUILD",
+)
+
 load("//third_party/android:android_configure.bzl", "android_configure")
 android_configure(name="local_config_android")
 load("@local_config_android//:android.bzl", "android_workspace")
diff --git a/yocto.BUILD b/yocto.BUILD
new file mode 100755
index 0000000..1fcf209
--- /dev/null
+++ b/yocto.BUILD
@@ -0,0 +1,83 @@
+package(default_visibility = ['//visibility:public'])
+
+filegroup(
+  name = 'gcc',
+  srcs = [
+    '%%CT_NAME%%-gcc',
+  ],
+)
+
+filegroup(
+  name = 'ar',
+  srcs = [
+    '%%CT_NAME%%-ar',
+  ],
+)
+
+filegroup(
+  name = 'ld',
+  srcs = [
+    '%%CT_NAME%%-ld',
+  ],
+)
+
+filegroup(
+  name = 'nm',
+  srcs = [
+    '%%CT_NAME%%-nm',
+  ],
+)
+
+filegroup(
+  name = 'objcopy',
+  srcs = [
+    '%%CT_NAME%%-objcopy',
+  ],
+)
+
+filegroup(
+  name = 'objdump',
+  srcs = [
+    '%%CT_NAME%%-objdump',
+  ],
+)
+
+filegroup(
+  name = 'strip',
+  srcs = [
+    '%%CT_NAME%%-strip',
+  ],
+)
+
+filegroup(
+  name = 'as',
+  srcs = [
+    '%%CT_NAME%%-as',
+  ],
+)
+
+filegroup(
+  name = 'compiler_pieces',
+  srcs = glob([
+    'usr/include/**',
+    'usr/lib/%%CT_NAME%%/**',
+    'usr/lib/%%CT_NAME%%/gcc/**',
+    'usr/libexec/%%CT_NAME%%/**',
+    'usr/include/gcc-build-internal-%%CT_NAME%%/**',
+  ]),
+)
+
+filegroup(
+  name = 'compiler_components',
+  srcs = [
+    ':gcc',
+    ':ar',
+    ':ld',
+    ':nm',
+    ':objcopy',
+    ':objdump',
+    ':strip',
+    ':as',
+  ],
+)
+
diff --git a/tools/yocto/BUILD b/tools/yocto/BUILD
new file mode 100644
index 0000000..3c5fdb7
--- /dev/null
+++ b/tools/yocto/BUILD
@@ -0,0 +1,50 @@
+package(default_visibility = ["//visibility:public"])
+
+cc_toolchain_suite(
+  name = 'toolchain',
+  toolchains = {
+    'yocto|compiler':':cc-compiler-yocto',
+    "local|compiler": ":cc-compiler-local",
+  },
+)
+
+filegroup(
+    name = "empty",
+    srcs = [],
+)
+
+filegroup(
+  name = 'toolchain_linux_all_files',
+  srcs = [
+    '@yocto//:compiler_pieces',
+  ],
+)
+
+cc_toolchain(
+    name = "cc-compiler-local",
+    all_files = ":empty",
+    compiler_files = ":empty",
+    cpu = "local",
+    dwp_files = ":empty",
+    dynamic_runtime_libs = [":empty"],
+    linker_files = ":empty",
+    objcopy_files = ":empty",
+    static_runtime_libs = [":empty"],
+    strip_files = ":empty",
+    supports_param_files = 1,
+)
+
+
+cc_toolchain(
+  name = 'cc-compiler-yocto',
+  all_files = ':toolchain_linux_all_files',
+  compiler_files = ':toolchain_linux_all_files',
+  cpu = 'yocto',
+  dwp_files = ':empty',
+  dynamic_runtime_libs = [':empty'],
+  linker_files = ':toolchain_linux_all_files',
+  objcopy_files = 'toolchain_linux_all_files',
+  static_runtime_libs = [':empty'],
+  strip_files = 'toolchain_linux_all_files',
+  supports_param_files = 1,
+)
